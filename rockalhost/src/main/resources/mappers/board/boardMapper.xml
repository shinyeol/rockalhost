<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="board">
	<select id="list" resultType="com.example.rockalhost.model.board.dto.BoardDTO">
		select * from ( 
    		select A.*, rownum as rn from ( 
    			select num, writer, subject, reg_date, readcount, re_level, 
				(select count(*) from board_comment where board_num=num) comment_count, show 
        		from board
        	
        		<choose>
					<when test="search_option != 'searchAll'">
						where ${search_option} like '%'||#{keyword}||'%' 
					</when>
					<otherwise>
						where (writer like '%'||#{keyword}||'%' or subject like 
						'%'||#{keyword}||'%' or content like '%'||#{keyword}||'%') 
					</otherwise>
				</choose>
        	
        	order by ref desc, re_step
    		) A 
		) where rn between #{start} and #{end}
	</select>
  
	<select id="view" resultType="com.example.rockalhost.model.board.dto.BoardDTO">
		SELECT * FROM board 
		WHERE num = #{num}
	</select>
  
	<insert id="insert">
		insert into board
			(num, writer, subject, passwd, ref, re_step, re_level, content, ip) 
		values (
			(select nvl(max(num)+1,1) from board), #{writer}, #{subject}, #{passwd}, 
			(select nvl(max(num)+1,1) from board), 1, 0, #{content}, #{ip})
	</insert>

	<select id="passwdCheck" resultType="int">
		select count(*) from board 
		where num = #{num} and passwd = #{passwd} 
	</select>
	
	<update id="hidden">
		update board 
		set show = 'n' 
		where num = #{num}
	</update>
	
	<update id="update" parameterType="com.example.rockalhost.model.board.dto.BoardDTO">
		update board 
		set writer=#{writer}, subject=#{subject}, content=#{content}
		, passwd=#{passwd}, ip=#{ip} 
		where num=#{num}
	</update>
	
	<insert id="reply">
		insert into board 
			(num, writer, subject, passwd, ref, re_step, re_level, content, ip) 
		values (
			(select nvl(max(num)+1,1) from board), #{writer}, #{subject}, #{passwd}, 
			#{ref}, #{re_step}, #{re_level}, #{content}, #{ip})
	</insert>
	
	<update id="plusReadcount">
		update board set 
		readcount = readcount+1 where num = #{num}
	</update>
	
	<select id="getCount" resultType="int">
		select count(*) from board 
		where show = 'y'
	</select>
	
	<select id="searchCount" resultType="int">
		select count(*) from board 
		<choose>
			<when test="search_option != 'searchAll'">
				where ${search_option} like '%'||#{keyword}||'%' 
				and show = 'y'
			</when>
			<otherwise>
				where (writer like '%'||#{keyword}||'%' or 
				content like '%'||#{keyword}||'%' or subject like '%'||#{keyword}||'%') 
				and show = 'y'
			</otherwise>
		</choose>
	</select>
	
	
	<select id="adminCount" resultType="int">
		select count(*) from board 
		<choose>
			<when test="search_option != 'searchAll'">
				where ${search_option} like '%'||#{keyword}||'%' 
				and show = #{show} 
			</when>
			<otherwise>
				where (writer like '%'||#{keyword}||'%' or 
				content like '%'||#{keyword}||'%' or subject like '%'||#{keyword}||'%') 
				and show = #{show} 
			</otherwise>
		</choose>
	</select>
	
	<select id="adminList" resultType="com.example.rockalhost.model.board.dto.BoardDTO">
		select * from ( 
    		select A.*, rownum as rn from ( 
    			select num, writer, subject, reg_date, readcount, re_level, 
				(select count(*) from board_comment where board_num=num) comment_count, show 
        		from board
        	
        		<choose>
					<when test="search_option != 'searchAll'">
						where ${search_option} like '%'||#{keyword}||'%' 
						and show = #{show} 
					</when>
					<otherwise>
						where (writer like '%'||#{keyword}||'%' or subject like 
						'%'||#{keyword}||'%' or content like '%'||#{keyword}||'%') 
						and show = #{show} 
					</otherwise>
				</choose>
        	
        	order by ref desc, re_step
    		) A 
		) where rn between #{start} and #{end}
	</select>
	
</mapper>














